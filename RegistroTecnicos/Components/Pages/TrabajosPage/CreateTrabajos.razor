@page "/Tecnicos/Trabajos/Create"

@inject TrabajosService trabajosService
@inject TecnicosService tecnicoService
@inject ClientesService clienteService
@inject PrioridadesService prioridadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@

<PageTitle>Create</PageTitle>
<EditForm Model="Trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @*Formulario*@
    <div class="container">
        <div class="card shadow-lg">

            @*Header*@
            <div class="card-header">
                <h5 class="card-title">Crear Trabajo</h5>
            </div>

            @*Body*@
            <div class="card-body">

                @*Id*@
                <div class="mb-3">
                    <label class="form-label"><strong>TrabajoId</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Trabajo.TrabajoId" readonly></InputNumber>
                </div>

                @*Fecha*@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Trabajo.Fecha"></InputDate>
                </div>

                @*Cliente*@
                <div class="mb-3">
                    <label class="form-label"><strong>Cliente</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.ClienteId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var cliente in ListaClientes)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Tecnico*@
                <div class="mb-3">
                    <label class="form-label"><strong>Tecnico</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.TecnicoId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var tecnico in ListaTecnicos)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Descripcion*@
                <div class="mb-3">
                    <label class="form-label"><strong>Descripci&oacute;n</strong></label>
                    <InputText class="form-control"
                               @bind-Value="Trabajo.Descripcion"></InputText>
                    <ValidationMessage For="(()=> Trabajo.Descripcion)" />
                </div>

                @*Prioridad*@
                <div class="mb-3">
                    <label class="form-label"><strong>Prioridad</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.PrioridadId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var prioridad in ListaPrioridades)
                        {
                            <option value="@prioridad.PrioridadesId">@prioridad.Descripcion</option>
                        }
                    </InputSelect>
                </div>

                @*SueldoHora*@
                <div class="mb-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Trabajo.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Trabajo.Monto)" />
                </div>
                
            </div>
            @*Footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Tecnicos/Trabajos/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-success">Siguiente</button>

            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    public Trabajos Trabajo { get; set; } = new Trabajos();

    public string Mensaje { get; set; } = string.Empty;

    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public List<Prioridades> ListaPrioridades { get; set; } = new List<Prioridades>();

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await clienteService.Listar(e => e.ClienteId > 0);
        ListaTecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
        ListaPrioridades = await prioridadesService.Listar(p => p.PrioridadesId > 0);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Trabajos/Index");
    }

    private async Task<bool> Validar()
    {
        var valido = await trabajosService.ExisteTrabajo(Trabajo.TrabajoId);
        return valido;
    }

    private async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un trabajo con este ID";
            return;
        }

        var crear = await trabajosService.Guardar(Trabajo);

        if (crear)
        {
            Mensaje = "Se ha creado correctamente el trabajo";
            navigationManager.NavigateTo($"/Tecnicos/Trabajos/Detalle/{Trabajo.TrabajoId}");
        }
        else
        {
            Mensaje = "No se ha creado correctamente el trabajo";
        }

    }
}