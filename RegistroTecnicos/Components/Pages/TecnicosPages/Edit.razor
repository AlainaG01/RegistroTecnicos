@page "/Tecnicos/Edit/{TecnicoId:int}"

@inject TecnicosService tecnicoService
@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Edit</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    @*Formulario*@
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Modificar T&eacute;cnico</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">
                <div class="d-flex flex-column align-items-center justify-content-center text-lg-center">

                    @*Id*@
                    <div class="col-4 ms-3">
                        <label class="form-label"><strong>TecnicoId</strong></label>
                        <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
                    </div>

                    @*Nombre*@
                    <div class="col-4 ms-3">
                        <label class="form-label"><strong>Nombres</strong></label>
                        <InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
                        <ValidationMessage For="(()=> Tecnico.Nombres)"/>
                    </div>

                    @*SueldoHora*@
                    <div class="col-4 ms-3">
                        <label class="form-label"><strong>SueldoHora</strong></label>
                        <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
                        <ValidationMessage For="(()=> Tecnico.SueldoHora)" />
                    </div>

                    @*Tipo Tecnico*@
                    <div class="col-4 ms-3">
                        <label class="form-label"><strong>Descripci&oacute;n</strong></label>
                        <InputSelect class="form-select" @bind-Value="Tecnico.TipoTecnico.Descripcion">
                            <option ="" selected disabled>Elija una opci&oacute;n</option>
                            @foreach (var tipoTecnico in ListaTiposTecnicos)
                            {
                                <option value="@tipoTecnico.Descripcion">@tipoTecnico.Descripcion</option>
                            }
                        </InputSelect>
                    </div>
                </div>
                
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
                <button type="submit" class="btn btn-success bi bi-floppy-fill" @onclick="Modificar"></button>
            </div>
        </div>
    </div>
</EditForm> 
@Mensaje

@code {
    [Parameter]
    public int TecnicoId { get; set; }

    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public List<TiposTecnicos> ListaTiposTecnicos { get; set; } = new List<TiposTecnicos>();

    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicoService.Buscar(TecnicoId);
        ListaTiposTecnicos = await tiposTecnicosService.Listar(e => e.TiposTecnicosId > 0);
    }

    public async Task Modificar()
    {
        var modificar = await tecnicoService.Guardar(Tecnico);

        if (modificar)
            Mensaje = "Se ha modificado correctamente el Tecnico";
        else
            Mensaje = "No se ha modificado correctamente";
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Index");
    }
}
