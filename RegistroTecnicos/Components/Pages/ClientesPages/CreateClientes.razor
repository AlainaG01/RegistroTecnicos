@page "/Tecnicos/Clientes/Create"

@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@

<PageTitle>Create</PageTitle>
<EditForm Model="Cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @*Formulario*@
    <div class="container">
        <div class="card shadow-lg">

            @*Header*@
            <div class="card-header">
                <h5 class="card-title">Crear Cliente</h5>
            </div>

            @*Body*@
            <div class="card-body">

                @*Id*@
                <div class="mb-3">
                    <label class="form-label"><strong>ClienteId</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Cliente.ClienteId" readonly></InputNumber>
                </div>

                @*Nombre*@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control"
                               @bind-Value="Cliente.Nombres"></InputText>
                    <ValidationMessage For="(()=> Cliente.Nombres)" />
                </div>

                @*WhatsApp*@
                <div class="mb-3">
                    <label class="form-label"><strong>WhatsApp</strong></label>
                    <InputText class="form-control" @bind-Value="Cliente.WhatsApp"></InputText>
                    <ValidationMessage For="(() => Cliente.WhatsApp)" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Tecnicos/Clientes/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-success bi bi-floppy-fill"></button>

            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    public Clientes Cliente { get; set; } = new Clientes();

    public string Mensaje { get; set; } = string.Empty;

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Clientes/Index");
    }

    private async Task<bool> Validar()
    {
        var valido = await clientesService.ExisteCliente(Cliente.ClienteId, Cliente.Nombres);
        return valido;
    }

    private async Task Guardar()
    {
        if(await Validar())
        {
            Mensaje = "Ya existe un cliente con este nombre";
            return;
        }
        var crear = await clientesService.Guardar(Cliente);

        if (crear)
        {
            Mensaje = "Se a creado correctamente el cliente";
        }
        else
        {
            Mensaje = "No se a creado correctamente el cliente";
        }
    }
}
