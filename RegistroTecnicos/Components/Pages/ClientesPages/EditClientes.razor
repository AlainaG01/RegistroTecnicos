@page "/Tecnicos/Clientes/Edit/{ClienteId:int}"

@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@

<PageTitle>Create</PageTitle>
<EditForm Model="Cliente" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @*Formulario*@
    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header">
                <h3>Editar Cliente</h3>
            </div>

            @*Body*@
            <div class="card-body d-flex flex-column align-items-center justify-content-center text-lg-center">

                @*Id*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>ClienteId</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Cliente.ClienteId" readonly></InputNumber>
                </div>

                @*Nombre*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control"
                               @bind-Value="Cliente.Nombres"></InputText>
                    <ValidationMessage For="(()=> Cliente.Nombres)" />
                </div>

                @*WhatsApp*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>WhatsApp</strong></label>
                    <InputText class="form-control" @bind-Value="Cliente.WhatsApp"></InputText>
                    <ValidationMessage For="(() => Cliente.WhatsApp)" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
                <button type="submit" class="btn btn-success bi bi-floppy-fill"></button>

            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    [Parameter]
    public int ClienteId { get; set; }

    public Clientes Cliente { get; set; } = new Clientes();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Cliente = await clientesService.Buscar(ClienteId);
    }

    public async Task Modificar()
    {
        var modificar = await clientesService.Guardar(Cliente);

        if (modificar)
        {
            Mensaje = "Se ha modificado correctamente";
        }
        else
        {
            Mensaje = "No se ha modificado correctamente";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Clientes/Index");
    }
}
