@page "/Tecnicos/Prioridades/Creater"

@inject PrioridadesService prioridadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="Prioridad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="shadow-lg">

            <div class="card-header text-center">
                <h3>Crear Prioridad</h3>
            </div>

            <div class="card-body d-flex flex-column align-items-center justify-content-center text-lg-center">
                @*Id*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>PrioridadId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prioridad.PrioridadesId" readonly></InputNumber>
                </div>

                @*Descripcion*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Descripcion</strong></label>
                    <InputText class="form-control" @bind-Value="Prioridad.Descripcion"></InputText>
                    <ValidationMessage For="(() => Prioridad.Descripcion)" />
                </div>

                @*Tiempo*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Tiempo (Minutos)</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prioridad.Tiempo"></InputNumber>
                    <ValidationMessage For="(() => Prioridad.Tiempo)" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
                <button type="submit" class="btn btn-success bi bi-floppy-fill">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    public Prioridades Prioridad { get; set; } = new Prioridades();

    public string Mensaje { get; set; } = string.Empty;

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Prioridades/Index");
    }

    private async Task<bool> Validar()
    {
        var valido = await prioridadesService.ExistePrioridad(Prioridad.PrioridadesId, Prioridad.Tiempo, Prioridad.Descripcion);
        return valido;
    }

    private async Task Guardar()
    {
        if(await Validar())
        {
            Mensaje = "Ya existe una prioridad con esta descripcion";
            return;
        }

        var crear = await prioridadesService.Guardar(Prioridad);

        if (crear)
        {
            Mensaje = "Se a creado con exito";
        }
        else
        {
            Mensaje = "No se a creado con exito";
        }
    }
}
