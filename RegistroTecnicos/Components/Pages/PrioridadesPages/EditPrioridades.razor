@page "/Tecnicos/Prioridades/Edit/{PrioridadId:int}"

@inject PrioridadesService prioridadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Edit</PageTitle>
<EditForm Model="Prioridad" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="shadow-lg">

            <div class="card-header text-center">
                <h3>Editar Prioridad</h3>
            </div>

            <div class="card-body d-flex flex-column align-items-center justify-content-center text-lg-center">
                @*Id*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>PrioridadId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prioridad.PrioridadesId" readonly></InputNumber>
                </div>

                @*Descripcion*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Descripcion</strong></label>
                    <InputText class="form-control" @bind-Value="Prioridad.Descripcion"></InputText>
                    <ValidationMessage For="(() => Prioridad.Descripcion)" />
                </div>

                @*Tiempo*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Tiempo (Minutos)</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prioridad.Tiempo"></InputNumber>
                    <ValidationMessage For="(() => Prioridad.Tiempo)" />
                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
                <button type="submit" class="btn btn-success bi bi-floppy-fill"></button>
            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    [Parameter]
    public int PrioridadId { get; set; }

    public Prioridades Prioridad { get; set; } = new Prioridades();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Prioridad = await prioridadesService.Buscar(PrioridadId);
    }

    public async Task Modificar()
    {
        var modificado = await prioridadesService.Guardar(Prioridad);
        if (modificado)
        {
            Mensaje = "Se ha modificado correctamente";
        }
        else
        {
            Mensaje = "No se ha modificado correctamente";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Prioridades/Index");
    }
}
