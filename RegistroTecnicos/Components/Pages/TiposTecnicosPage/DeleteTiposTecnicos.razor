@page "/Tecnicos/TiposTecnicos/Delete/{TipoId:int}"

@inject TiposTecnicosService tiposTecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Delete</PageTitle>
<div class="container">
    <div class="shadow-lg">
        @*header*@
        <div class="card-header text-center">
            <h3><strong>Eliminar Tipo T&eacute;cnico</strong></h3>
        </div>

        @*body*@
        <div class="card-body">
            <div class="text-center">
                <h4><strong>¿Desea eliminar este tipo t&eacute;cnico?</strong></h4>
            </div>
            <ul>
                <li><strong>TipoTecnicoId: </strong>@TipoTecnico.TiposTecnicosId</li>
                <li><strong>Descripci&oacute;n: </strong>@TipoTecnico.Descripcion</li>
            </ul>
        </div>
    </div>
    @*Footer*@
    <div class="card-footer text-center">
        <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
        <button type="submit" class="btn btn-danger bi bi-trash" @onclick="Eliminar"></button>
    </div>
</div>

@Mensaje

@code {
    [Parameter]
    public int TipoId { get; set; }

    public TiposTecnicos TipoTecnico { get; set; } = new TiposTecnicos();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        TipoTecnico = await tiposTecnicosService.Buscar(TipoId);
    }

    private async Task Eliminar()
    {
        var eliminado = await tiposTecnicosService.Eliminar(TipoTecnico.TiposTecnicosId);
        if (eliminado)
        {
            Mensaje = $"El tipo tecnico {TipoTecnico.Descripcion} ha sido eliminado correctamente";
        }
        else
        {
            Mensaje = "No se ha podido eliminar correctamente";
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/TiposTecnicos/Index");
    }
}
